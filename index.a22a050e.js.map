{"mappings":"ACEA,IAAM,EAAY,SAAS,aAAa,CAAC,cACnC,EAAQ,SAAS,aAAa,CAAC,gBAC/B,EAAe,SAAS,aAAa,CAAC,eACtC,EAAkB,SAAS,aAAa,CAAC,kBACzC,EAAe,SAAS,aAAa,CAAC,eACtC,EAAkB,SAAS,aAAa,CAAC,kBA6C/C,EAAU,gBAAgB,CAAC,QAAS,SAAC,CAArC,EACE,IAAM,EAAS,EAAE,MAAM,CAAC,SAAS,CAE7B,EAAO,QAAQ,CAAC,eAClB,AA/CJ,WACE,GAAI,AAAsB,KAAtB,EAAM,IAAI,CAAC,MAAM,EAGrB,EAAa,QAAQ,CAAG,CAAA,EAIxB,IAAK,IAFC,EAAM,SAAS,aAAa,CAAC,MAE1B,EAAI,EAAG,EAAI,EAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAE,IACtD,EAAI,SAAS,EAAI,YAEnB,EAAM,MAAM,CAAC,GAEb,EAAa,QAAQ,CAAG,AAAsB,KAAtB,EAAM,IAAI,CAAC,MAAM,CAC3C,IAoCM,EAAO,QAAQ,CAAC,kBAClB,AAnCJ,WACE,GAAI,AAAuC,KAAvC,EAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAGtC,EAAgB,QAAQ,CAAG,CAAA,EAEtB,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,AACH,CAAA,EAAI,SAAS,EAAI,W,C,C,M,E,CADd,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGL,EAAgB,QAAQ,CAAG,AAAuC,KAAvC,EAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAC/D,IA4BM,EAAO,QAAQ,CAAC,gBAzBpB,EAAa,QAAQ,CAAG,CAAA,EACxB,EAAM,gBAAgB,CAAC,MAAM,GAC7B,EAAa,QAAQ,CAAG,AAAsB,IAAtB,EAAM,IAAI,CAAC,MAAM,EA2BrC,EAAO,QAAQ,CAAC,kBAClB,AAzBJ,WACE,EAAgB,QAAQ,CAAG,CAAA,EAEtB,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,gBAAgB,CAAC,MAAM,E,C,M,E,CADxB,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGL,EAAgB,QAAQ,CAAG,AAAuC,IAAvC,EAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,AAC/D,GAoBA","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar container = document.querySelector(\".container\");\nvar table = document.querySelector(\".field tbody\");\nvar appendRowBtn = document.querySelector(\".append-row\");\nvar appendColumnBtn = document.querySelector(\".append-column\");\nvar removeRowBtn = document.querySelector(\".remove-row\");\nvar removeColumnBtn = document.querySelector(\".remove-column\");\nfunction appendRow() {\n    if (table.rows.length === 10) return;\n    removeRowBtn.disabled = false;\n    var row = document.createElement(\"tr\");\n    for(var i = 0; i < table.rows[length].children.length; i++)row.innerHTML += \"<td></td>\";\n    table.append(row);\n    appendRowBtn.disabled = table.rows.length === 10;\n}\nfunction appendColumn() {\n    if (table.rows[length].children.length === 10) return;\n    removeColumnBtn.disabled = false;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.innerHTML += \"<td></td>\";\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    appendColumnBtn.disabled = table.rows[length].children.length === 10;\n}\nfunction removeRow() {\n    appendRowBtn.disabled = false;\n    table.lastElementChild.remove();\n    removeRowBtn.disabled = table.rows.length === 2;\n}\nfunction removeColumn() {\n    appendColumnBtn.disabled = false;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.lastElementChild.remove();\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    removeColumnBtn.disabled = table.rows[length].children.length === 2;\n}\ncontainer.addEventListener(\"click\", function(e) {\n    var button = e.target.classList;\n    if (button.contains(\"append-row\")) appendRow();\n    if (button.contains(\"append-column\")) appendColumn();\n    if (button.contains(\"remove-row\")) removeRow();\n    if (button.contains(\"remove-column\")) removeColumn();\n});\n\n//# sourceMappingURL=index.a22a050e.js.map\n","'use strict';\n\nconst container = document.querySelector('.container');\nconst table = document.querySelector('.field tbody');\nconst appendRowBtn = document.querySelector('.append-row');\nconst appendColumnBtn = document.querySelector('.append-column');\nconst removeRowBtn = document.querySelector('.remove-row');\nconst removeColumnBtn = document.querySelector('.remove-column');\n\nfunction appendRow() {\n  if (table.rows.length === 10) {\n    return;\n  }\n  removeRowBtn.disabled = false;\n\n  const row = document.createElement('tr');\n\n  for (let i = 0; i < table.rows[length].children.length; i++) {\n    row.innerHTML += '<td></td>';\n  }\n  table.append(row);\n\n  appendRowBtn.disabled = table.rows.length === 10;\n}\n\nfunction appendColumn() {\n  if (table.rows[length].children.length === 10) {\n    return;\n  }\n  removeColumnBtn.disabled = false;\n\n  for (const row of table.rows) {\n    row.innerHTML += '<td></td>';\n  }\n  appendColumnBtn.disabled = table.rows[length].children.length === 10;\n}\n\nfunction removeRow() {\n  appendRowBtn.disabled = false;\n  table.lastElementChild.remove();\n  removeRowBtn.disabled = table.rows.length === 2;\n}\n\nfunction removeColumn() {\n  appendColumnBtn.disabled = false;\n\n  for (const row of table.rows) {\n    row.lastElementChild.remove();\n  }\n  removeColumnBtn.disabled = table.rows[length].children.length === 2;\n}\n\ncontainer.addEventListener('click', (e) => {\n  const button = e.target.classList;\n\n  if (button.contains('append-row')) {\n    appendRow();\n  }\n\n  if (button.contains('append-column')) {\n    appendColumn();\n  }\n\n  if (button.contains('remove-row')) {\n    removeRow();\n  }\n\n  if (button.contains('remove-column')) {\n    removeColumn();\n  }\n});\n"],"names":["container","document","querySelector","table","appendRowBtn","appendColumnBtn","removeRowBtn","removeColumnBtn","addEventListener","e","button","target","classList","contains","appendRow","rows","length","disabled","row","createElement","i","children","innerHTML","append","appendColumn","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","lastElementChild","remove","removeColumn"],"version":3,"file":"index.a22a050e.js.map"}